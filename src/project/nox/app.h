/* NoX (NoC Simulator)
 *
 * Dept. of Computer Science & Engineering, Pennsylvania State University.
 * All Rights Reserved.
 *  
 * 1. License     
 * NoX is distributed free of charge for academic, educational, noncommercial 
 * research purposes as long as this notice in its entirety is preserved in
 * every file included in this package.
 * All commercial use of this program requires separate licence. Contact the
 * author for details.
 * 
 * 2. All the publications that used the simulation results generated by the 
 * NoX should notify the author of the publication information and put 
 * following reference.
 *
 *  http://www.cse.psu.edu/~dpark/nox/
 * 
 * 3. Modification of the source code is permitted and encouraged as long as 
 * it follows the terms described in this copyright notice.
 *
 * 4. The author is not responsible for any problems caused by possible errors
 * of the NoX package. Therefore, users should verify the simulation result
 * before using it in their publication.
 *
 * Dept. of Computer Science & Engineering, Pennsylvania State University.
 * Contact: dpark@cse.psu.edu 
 * 
 * 6. If problems are found with the NoX package, please send an email to the
 * author for discussion and correction.

 */

/* Update History
 *
 *
 */


#ifndef APP_H
#define APP_H

/*#ifdef TR_INTEG
bool app_to_nic_output_buf_stage(int src, int dest, int is_nack, long long trid, int len);
#else
  #ifdef TRACE_READ
      bool app_to_nic_output_buf_stage(int src, int dest, int is_nack, int len);
  #else
      bool app_to_nic_output_buf_stage(int src, int dest, int is_nack, int len);
  #endif
#endif*/

bool app_to_nic_output_buf_stage(int src, int dest, int is_nack, long long id, int len);
bool source_queue_delete(int n);
bool source_queue_add(int n, unsigned int id, bool done, int bid, float slack);
bool source_queue_update(int n, unsigned int id, bool done);
float source_queue_max_slack(int n);
#endif
