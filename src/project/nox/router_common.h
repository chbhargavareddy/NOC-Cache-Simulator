/* NoX (NoC Simulator)
 *
 * Dept. of Computer Science & Engineering, Pennsylvania State University.
 * All Rights Reserved.
 *  
 * 1. License     
 * NoX is distributed free of charge for academic, educational, noncommercial 
 * research purposes as long as this notice in its entirety is preserved in
 * every file included in this package.
 * All commercial use of this program requires separate licence. Contact the
 * author for details.
 * 
 * 2. All the publications that used the simulation results generated by the 
 * NoX should notify the author of the publication information and put 
 * following reference.
 *
 *  http://www.cse.psu.edu/~dpark/nox/
 * 
 * 3. Modification of the source code is permitted and encouraged as long as 
 * it follows the terms described in this copyright notice.
 *
 * 4. The author is not responsible for any problems caused by possible errors
 * of the NoX package. Therefore, users should verify the simulation result
 * before using it in their publication.
 *
 * Dept. of Computer Science & Engineering, Pennsylvania State University.
 * Contact: dpark@cse.psu.edu 
 * 
 * 6. If problems are found with the NoX package, please send an email to the
 * author for discussion and correction.

 */

/* Update History
 *
 *
 */


// This header contains definitions that are shared 
// among different routing algorithms
#ifndef _router_common_h
#define _router_common_h

#include "router.h"

void calc_coord(int node, int *x, int *y);
void num_avail_buffer(int node, int nbuf[MAX_PC-MAX_NIC_PC], int best_vc[MAX_PC-MAX_NIC_PC]);
void get_blocked(int node, int *is_blocked);
void get_best_credit(int node, int credit[MAX_PC-MAX_NIC_PC], int best_vc[MAX_PC-MAX_NIC_PC]);
int calc_dist(int n1, int n2);
int get_best_vc(int node, int pc, int vc, int dest_pc, flit_t *flit_ptr);
void get_best_nic_vc(int node, int pc, int *nic_vc, int *rinbuf_vc);
bool is_rinbuf_vc_free(int node, int pc, int vc);
#endif
